activity-support {
  match: Receipt (this)

  time {
    if (exists((this.item.dateInterval.start))) {
      expression (this.item.dateInterval.start)
    } else {//by definition dateInterval should have a start & end, so this path is not expected
      expression (now())
    }
  }

  states {

    if ("this.canceled || !exists(this.item.dateInterval.start) || (exists(this.item.dateInterval.start) && isPast(this.item.dateInterval.start))") {

      state (Recent) {

        summary-view {
          image-url {
            template ("[#{raw(this.item.spaceResort.images[0].url)}]")
          }
          title {
            template ("[#{value(this.item.spaceResort)}]")
          }
          details {
            if (exists(this) && size(this) == 1) {
              template-macro (RECEIPT_ACTIVITY_CARD_DETAILS) {
                param (receipt) {
                  expression (this) // regarding empty and cardinality warnings on this view: VBOS-5531
                }
              }
            }
          }
          message {
            template ("")
          }
        }
        detail-view {
          render {
            layout-match (this) {
              mode (Details)
            }
          }
        }
      }
    } else-if (exists(this.relevantDateTime) && isFuture(this.relevantDateTime)) {

      state (Scheduled) {
        expires(this.relevantDateTime)

        summary-view {
          image-url {
            template ("[#{raw(this.item.spaceResort.images[0].url)}]")
          }
          title {
            template ("[#{value(this.item.spaceResort)}]")
          }
          details{
            if (exists(this) && size(this) == 1) {
              template-macro (RECEIPT_ACTIVITY_CARD_DETAILS) {
                param (receipt) {
                  expression (this)
                }
              }
            }
          }
          message {
            template ("")
          }
        }
        detail-view {
          render {
            layout-match (this) {
              mode (Details)
            }
          }
        }
      }
    } else {
      state (Relevant) {
        expires(this.item.dateInterval.start)

        summary-view {
          image-url {
            template ("[#{raw(this.item.spaceResort.images[0].url)}]")
          }
          title {
            template ("[#{value(this.item.spaceResort)}]")
          }
          details{
            if (exists(this) && size(this) == 1) {
              template-macro (RECEIPT_ACTIVITY_CARD_DETAILS) {
                param (receipt) {
                  expression (this)
                }
              }
            }
          }
          message {
            if (exists(this) && size(this) == 1) {
              template-macro (RECEIPT_ACTIVITY_CARD_DETAILS) {
                param (receipt) {
                  expression (this)
                }
              }
            }
          }
        }
        detail-view {
          render {
            layout-match (this) {
              mode (Details)
            }
          }
        }
      }
    }
  }
}