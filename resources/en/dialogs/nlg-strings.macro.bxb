macro-def (RECEIPT_ACTIVITY_CARD_MESSAGE) {
  params {
    param (receipt) {
      type (Receipt)
      min (Required) max (One)
    }
  }
  content {
    template ("Suit up, your trip[ to #{value(receipt.item.spaceResort.planet)}] is starting soon!")
  }
}

macro-def (RECEIPT_ACTIVITY_CARD_DETAILS) {
  params {
    param (receipt) {
      type (Receipt)
      min (Required) max (One)
    }
  }
  content {
    if (receipt.canceled) {
      template ("Reservation canceled")
    } else {
      template("Reservation for #{value(receipt.item.numberOfAstronauts)}")
    }
  }
}

macro-def (RECEIPT_RESULT) {
  params {
    param (receipt) {
      type (Receipt)
      min (Required) max (One)
    }
  }
  content {
    if ("exists(receipt.canceled) && receipt.canceled == true") {
      template ("Your trip has been canceled.")
    } else {
      template ("I hope you have a great time[ at #{value(receipt.item.spaceResort)}].")
    }
  }
}

macro-def (SPACE_RESORT_SELECTION) {
  content {
    template("Which space resort would you like?")
  }
}

macro-def (NUMBER_OF_ASTRONAUTS_SELECTION) {
  content {
    template ("How many astronauts?")
  }
}

macro-def (HABITAT_POD_SELECTION) {
  content {
    template ("Which habitat pod would you like?")
  }
}

macro-def (DATE_INTERVAL_ELICITATION) {
  content {
    template ("When do you want to stay?")
  }
}

macro-def (COMMIT_ORDER_CONFIRMATION) {
  content {
    template ("Are you sure you want to book this trip?")
  }
}

macro-def (SPACE_RESORT_RESULT) {
  params {
    param (result) {
      type (SpaceResort)
      min (Required) max (Many)
    }
  }
  content {
    if (size(result) == 1) {
      template ("Check out this #{concept(result)}.")
    } else {
      template ("I found these #{concept(result)}.")
    }
  }
}

macro-def (HIGHLIGHT_LABEL_BY_PREFERENCES) {
  content {
    template ("Based on your preferences")
  }
}

// Exception handling
macro-def (UNSUPPORTED_SEARCH_OPTION) {
  content {
    template ("Unsupported search criteria.")
  }
}

macro-def (UNKNOWN_ERROR) {
  content {
    template ("Something's wrong.")
  }
}
